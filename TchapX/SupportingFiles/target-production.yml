name: TchapX-Production

schemes:
  TchapX-Production:
    analyze:
      config: Debug
    archive:
      config: Release
    build:
      targets:
        TchapX-Production:
          - running
          - testing
          - profiling
          - analyzing
          - archiving
    profile:
      config: Release
    run:
      config: Debug
      environmentVariables:
        - variable: HTTPS_PROXY
          value: localhost:9090
          isEnabled: false
        - variable: UI_TESTS_SCREEN
          value: ""
          isEnabled: false
        - variable: RESET_APP_SETTINGS
          value: "true"
          isEnabled: false
    test:
      config: Debug
      gatherCoverageData: true
      coverageTargets:
        - TchapX-Production
      testPlans:
        - path: ../../UnitTests/SupportingFiles/UnitTests.xctestplan
          defaultPlan: true

targets:
  TchapX-Production:
    type: application
    platform: iOS

    configFiles:
      Debug: ../production/SupportingFiles/secrets.xcconfig
      Release: ../production/SupportingFiles/secrets.xcconfig

    info:
      path: ../production/SupportingFiles/Info.plist
      properties:
        UILaunchScreen:
          UIColorName: colors/background-color
        CFBundleDisplayName: $(APP_DISPLAY_NAME)
        CFBundleShortVersionString: $(MARKETING_VERSION)
        CFBundleVersion: $(CURRENT_PROJECT_VERSION)
        CFBundleURLTypes: [
          {
            CFBundleTypeRole: Editor,
            CFBundleURLName: "Element Call",
            CFBundleURLSchemes: [
              io.element.call
            ]
          },
          {
            CFBundleTypeRole: Editor,
            CFBundleURLName: "Application",
            CFBundleURLSchemes: [
              io.element
            ]
          }
        ]
        UISupportedInterfaceOrientations: [
          UIInterfaceOrientationPortrait,
          UIInterfaceOrientationPortraitUpsideDown,
          UIInterfaceOrientationLandscapeLeft,
          UIInterfaceOrientationLandscapeRight
        ]
        appGroupIdentifier: $(APP_GROUP_IDENTIFIER)
        baseBundleIdentifier: $(BASE_BUNDLE_IDENTIFIER)
        keychainAccessGroupIdentifier: $(KEYCHAIN_ACCESS_GROUP_IDENTIFIER)
        productionAppName: $(PRODUCTION_APP_NAME)
        ITSAppUsesNonExemptEncryption: false
        NSUserActivityTypes: [
          INSendMessageIntent,
          INStartCallIntent,
        ]
        NSCameraUsageDescription: To take pictures or videos and send them as a message $(APP_DISPLAY_NAME) needs access to the camera.
        NSMicrophoneUsageDescription: To record and send messages with audio, $(APP_DISPLAY_NAME) needs to access the microphone.
        NSPhotoLibraryAddUsageDescription: Allows saving photos and videos to your library.
        NSLocationWhenInUseUsageDescription: Grant location access so that $(APP_DISPLAY_NAME) can share your location.
        NSFaceIDUsageDescription: Face ID is used to access your app.
        UIBackgroundModes: [
          audio,
          fetch,
          processing,
          voip
        ]
        BGTaskSchedulerPermittedIdentifiers: [
          io.element.elementx.background.refresh
        ]
        UTExportedTypeDeclarations:
        - UTTypeConformsTo: [public.text]
          UTTypeDescription: Mention Pills
          UTTypeIdentifier: $(PILLS_UT_TYPE_IDENTIFIER)
        CFBundleDocumentTypes:
        - CFBundleTypeName: Mention Pills
          CFBundleTypeRole: Viewer
          LSHandlerRank: Owner
          LSItemContentTypes: $(PILLS_UT_TYPE_IDENTIFIER)
        LSSupportsOpeningDocumentsInPlace: false
        mapLibreAPIKey: $(MAPLIBRE_API_KEY)
        
        # Data generated from Tchap Android `certignaservicesrootca.cer` embedded certificate.
        # Certificate of a website can be obtained as follow: ex +'/BEGIN CERTIFICATE/,/END CERTIFICATE/p' <(echo | openssl s_client -showcerts -connect tchap.gouv.fr:443) -scq > tchap.gouv.fr.crt
        # Generate PEM: openssl x509 -inform der -in certignaservicesrootca.cer -out certignaservicesrootca.pem
        # Generate SPKI: cat certignaservicesrootca.pem | openssl x509 -inform pem -noout -outform pem -pubkey | openssl pkey -pubin -inform pem -outform der | openssl dgst -sha256 -binary | openssl enc -base64
        NSAppTransportSecurity: {
          NSPinnedDomains: {
            "tchap.gouv.fr": {
              NSIncludesSubdomains: true,
              NSPinnedCAIdentities: [
                "SPKI-SHA256-BASE64": "Vvyvg4+bOEbI6aO7K28ioVsUfckLqCSKqlIqZTEB/uE=",
                "PEM": "-----BEGIN CERTIFICATE-----MIILSzCCCTOgAwIBAgIQFZG7N0tDOkhSu9YZ31DJkDANBgkqhkiG9w0BAQsFADB9MQswCQYDVQQGEwJGUjESMBAGA1UECgwJREhJTVlPVElTMRwwGgYDVQQLDBMwMDAyIDQ4MTQ2MzA4MTAwMDM2MR0wGwYDVQRhDBROVFJGUi00ODE0NjMwODEwMDAzNjEdMBsGA1UEAwwUQ2VydGlnbmEgU2VydmljZXMgQ0EwHhcNMjQwOTIzMjIwMDAwWhcNMjUwOTIzMjE1OTU5WjByMQswCQYDVQQGEwJGUjEOMAwGA1UEBwwFUEFSSVMxJjAkBgNVBAoMHUdPVVZFUk5FTUVOVCBQUkVNSUVSIE1JTklTVFJFMRYwFAYDVQQDDA10Y2hhcC5nb3V2LmZyMRMwEQYDVQQFEwpTMzIyNjcwMTc0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA0QqaufQjxBTQLQXZXd9gjQQBUXAtSqfubCPJtWHlDdsHGXZj3IdRGyQ5YtwOVOnqRNg1Vv5t013mbrrB7uerpfwBgE9DgM+0xrsKujjeaHppuG/0YHKtDajIgZbdpxKju3Rey4GPDwt/ABj4iMz4ocJrPuNQGMMR+cMTfN9R1V8Tot60JrRS494j31XLATItNSFUzrJOacAg7xouimZ72/Z9W7mv2xcbWvU7dfRhNFrWFg4zHAOZMyzm1EZLWEiclciTV/uRKlxODbwchb27NlqYcve4Avwc+quSlLR4Cm9fn4+BKaArCQCnMfN3EcFOPUlCA2VZJOyeYGFL9Cy68wIDAQABo4IG0DCCBswwgeQGCCsGAQUFBwEBBIHXMIHUMDgGCCsGAQUFBzAChixodHRwOi8vYXV0b3JpdGUuZGhpbXlvdGlzLmNvbS9zZXJ2aWNlc2NhLmRlcjA2BggrBgEFBQcwAoYqaHR0cDovL2F1dG9yaXRlLmNlcnRpZ25hLmZyL3NlcnZpY2VzY2EuZGVyMC4GCCsGAQUFBzABhiJodHRwOi8vc2VydmljZXNjYS5vY3NwLmNlcnRpZ25hLmZyMDAGCCsGAQUFBzABhiRodHRwOi8vc2VydmljZXNjYS5vY3NwLmRoaW15b3Rpcy5jb20wHwYDVR0jBBgwFoAUrOyGj0s3HLh/FxsZ0K7oTuM0XBIwDAYDVR0TAQH/BAIwADBhBgNVHSAEWjBYMAgGBmeBDAECAjBMBgsqgXoBgTECBQEBATA9MDsGCCsGAQUFBwIBFi9odHRwczovL3d3dy5jZXJ0aWduYS5jb20vYXV0b3JpdGUtY2VydGlmaWNhdGlvbjBlBgNVHR8EXjBcMC2gK6AphidodHRwOi8vY3JsLmRoaW15b3Rpcy5jb20vc2VydmljZXNjYS5jcmwwK6ApoCeGJWh0dHA6Ly9jcmwuY2VydGlnbmEuZnIvc2VydmljZXNjYS5jcmwwEwYDVR0lBAwwCgYIKwYBBQUHAwEwDgYDVR0PAQH/BAQDAgWgMIICqwYDVR0RBIICojCCAp6CDXRjaGFwLmdvdXYuZnKCGm1hdHJpeC5hZ2VudC50Y2hhcC5nb3V2LmZygh5tYXRyaXguYWdlbnQuc3NpLnRjaGFwLmdvdXYuZnKCIW1hdHJpeC5hZ2VudC5lbHlzZWUudGNoYXAuZ291di5mcoIkbWF0cml4LmFnZW50LmVkdWNhdGlvbi50Y2hhcC5nb3V2LmZyghF3d3cudGNoYXAuZ291di5mcoIdbWF0cml4LmFnZW50LnBtLnRjaGFwLmdvdXYuZnKCIW1hdHJpeC5hZ2VudC5zb2NpYWwudGNoYXAuZ291di5mcoIlbWF0cml4LmFnZW50LmRpcGxvbWF0aWUudGNoYXAuZ291di5mcoIibWF0cml4LmFnZW50LmN1bHR1cmUudGNoYXAuZ291di5mcoIjbWF0cml4LmFnZW50LmZpbmFuY2VzLnRjaGFwLmdvdXYuZnKCIG1hdHJpeC5hZ2VudC5kaW51bS50Y2hhcC5nb3V2LmZygihtYXRyaXguYWdlbnQuY29sbGVjdGl2aXRlcy50Y2hhcC5nb3V2LmZygiJtYXRyaXguYWdlbnQuZXh0ZXJuZS50Y2hhcC5nb3V2LmZygiJtYXRyaXguYWdlbnQuanVzdGljZS50Y2hhcC5nb3V2LmZyghRzeWduYWwudGNoYXAuZ291di5mcoIjbWF0cml4LmFnZW50LmludHJhZGVmLnRjaGFwLmdvdXYuZnKCJG1hdHJpeC5hZ2VudC5pbnRlcmlldXIudGNoYXAuZ291di5mcoImbWF0cml4LmFnZW50LmRldi1kdXJhYmxlLnRjaGFwLmdvdXYuZnKCJm1hdHJpeC5hZ2VudC5hZ3JpY3VsdHVyZS50Y2hhcC5nb3V2LmZyMB0GA1UdDgQWBBS83Rwa+3VA8LGW04vmyJI87Ju1+TCCAfUGCisGAQQB1nkCBAIEggHlBIIB4QHfAHcADeHyMCvTDcFAYhIJ6lUu/Ed0fLHX6TDvDkIetH5OqjQAAAGSI23qVwAABAMASDBGAiEA4cJG5LbSykD7xIt8P7j18cHSQOvvrFVg9CCtXjRY62ICIQDf1clZz3/RWhCsw/YzZJRZeB2KFdHw4cPncLjrtmn/RgB1AN3cyjSV1+EWBeeVMvrHn/g9HFDf2wA6FBJ2Ciysu8gqAAABkiNt6IsAAAQDAEYwRAIgLfPqAELOAUy4EE0TNTMgcea0nnhYNYyYXGQgyFP0su0CIA4LikXfRmPfyEFNIVcCZtx4MhxmNsZMLJ2Y0Yuz5J2zAHYA5tIxY0B3jMEQQQbXcbnOwdJA9paEhvu6hzId/R43jlAAAAGSI23qowAABAMARzBFAiBe/7G6B0sLrOOzgCBTlAJW2G6W9rjum2oqUBLOUExbGwIhAO4WQEmT/JpFIsCHMlp+xn9cQM8ifxMk9g/Lsm/rVET3AHUArxgaKNaMo+CpikycZ6sJ+Lu8IrquvLE4o6Gd0/m2Aw0AAAGSI23pTgAABAMARjBEAiBN1VSlxMVDLrn6DbvEhM1lcMRkf3zgNhjUB0rqlu7ecQIgTO3U5uvAbdwC4HTZDcmeL6mUaikE0YLP9Dmi8LykwUAwDQYJKoZIhvcNAQELBQADggIBAGOFv2DayEEotrk72StYClUHs6Xifs3FpjlymVH3Z7eqGDxPxupWB51LqdE1Un5BysOouvXGmYfJl/mxhrUY/fdk2HMH0x9/i+TkcWhudRvNinVGLaCkj3/uZGEqhPbkop2tU67hFHVIDBDnDl8w0hwOrR9gOOt/DymBXP/fEOGc/phxG6snSlm8RfaTK9zpvpn7fsAn2F3oA8RImiKibGUqSicPlwIx9HNviHpRos4GcIAtqUlnqCXgsb/6yipXC94qmI01Ah01CEtdL42QV5B29GXqZIy4nxnlOSXt1aWwvcmV6H4xd5nUvYfJlcV1EaQby72sgT5wDZ22WZAhmBQqMxqlUZ71QpUfihfIK7vOrVu2lO4ua8i9DkwSHXipSdyq8X279xOJ+PxEECrpelEL6AoKBJjzLc0gyJ/LsuOFXF88AgF87D/n9ELZyov4c4Jy1r4L6EjFQLjH58NmfcgnZYuPze5mCuLcPA1bpmJuOYJSqZwZyDdsFVyjCtl+rzVptWy/LlQyFkduWNVP0VZoUvnk1fe8hX3SSGkbqC7+3k+NE4pVL77QM6+eIIRFhqmDrkS9qu54LUBQXObqFKW5PJ01VJSYsO+xeFXZcUkrw1e6WjszMSJdKyICSwTn+qaHbJ7DfhW0KA4g/dJD2T9AF6HIecE7Bc/o2QEVB2Qw-----END CERTIFICATE-----"
              ]
            }
          }
        }

    settings:
      base:
        PRODUCTION_APP_NAME: TchapX PRODUCTION
        BASE_APP_GROUP_IDENTIFIER: fr.gouv.tchapx
        BASE_BUNDLE_IDENTIFIER: fr.gouv.tchapx
        APP_NAME: TchapX-Production
        APP_DISPLAY_NAME: TchapX # The name used in the application.

        PRODUCT_NAME: $(APP_NAME)
        PRODUCT_BUNDLE_IDENTIFIER: $(BASE_BUNDLE_IDENTIFIER)
        ASSETCATALOG_COMPILER_APPICON_NAME: TchapX-icon
        CODE_SIGN_ENTITLEMENTS: TchapX/production/SupportingFiles/tchapx.entitlements
        SWIFT_OBJC_BRIDGING_HEADER: ElementX/SupportingFiles/ElementX-Bridging-Header.h
        SWIFT_OBJC_INTERFACE_HEADER_NAME: GeneratedInterface-Swift.h
        PILLS_UT_TYPE_IDENTIFIER: $(BASE_BUNDLE_IDENTIFIER).pills
        OTHER_SWIFT_FLAGS:
        - "-DIS_MAIN_APP -DIS_TCHAP_PRODUCTION"

    preBuildScripts:
    - name: 🛠 SwiftGen
      runOnlyWhenInstalling: false
      basedOnDependencyAnalysis: false
      shell: /bin/sh
      script: |
        export PATH="$PATH:/opt/homebrew/bin"
        if which swiftgen >/dev/null; then
            swiftgen config run --config Tools/SwiftGen/swiftgen-config.yml
            swiftgen config run --config Tools/SwiftGen/swiftgen-config-tchap.yml
        else
            echo "warning: SwiftGen not installed, download from https://github.com/SwiftGen/SwiftGen"
        fi
    - name: 🧙 Sourcery - Generate mocks
      runOnlyWhenInstalling: false
      basedOnDependencyAnalysis: false
      shell: /bin/sh
      script: |
        export PATH="$PATH:/opt/homebrew/bin"
        if which sourcery >/dev/null; then
            sourcery --config Tools/Sourcery/AutoMockableConfig.yml
        else
            echo "warning: Sourcery not installed, run swift run tools setup-project"
        fi

    postBuildScripts:
    - name: ⚠️ SwiftLint
      runOnlyWhenInstalling: false
      basedOnDependencyAnalysis: false
      shell: /bin/sh
      script: |
        export PATH="$PATH:/opt/homebrew/bin"
        if which swiftlint >/dev/null; then
            swiftlint
        else
            echo "warning: SwiftLint not installed, download from https://github.com/realm/SwiftLint"
        fi
    - name: 🧹 SwiftFormat
      runOnlyWhenInstalling: false
      basedOnDependencyAnalysis: false
      shell: /bin/sh
      script: |
        export PATH="$PATH:/opt/homebrew/bin"
        if which swiftformat >/dev/null; then
            swiftformat --lint --lenient "$PROJECT_DIR"
        else
            echo "warning: SwiftFormat not installed, download from https://github.com/nicklockwood/SwiftFormat"
        fi

    dependencies:
    - target: TchapX-NSE-Production
    # not used yet
    # - target: NCE
    - package: MatrixRustSDK
    - package: Compound
    - package: Algorithms
    - package: AnalyticsEvents
    - package: Collections
    - package: DeviceKit
    - package: DTCoreText
    - package: KeychainAccess
    - package: Kingfisher
    - package: KZFileWatchers
    - package: LoremSwiftum
    - package: LRUCache
    - package: Mapbox
    - package: PostHog
    - package: SwiftState
    - package: GZIP
    - package: Sentry
      products: 
        - Sentry
        - SentrySwiftUI
    - package: Version
    - package: Emojibase
    - package: WysiwygComposer
    - package: SwiftOGG
    - package: DSWaveformImage
      product: DSWaveformImageViews

    sources:
    - path: ../../ElementX/Sources
      excludes:
        - Other/Extensions/XCUIElement.swift
    - path: ../main/Sources
      excludes:
        - Other/Extensions/XCUIElement.swift
    - path: ../main/Resources
    - path: ../../ElementX/Resources
    - path: ../../ElementX/SupportingFiles/Settings.bundle
    - path: ../production/Resources
    - path: ../production/SupportingFiles
      excludes:
        - target.yml
        - NSE
    - path: ../../Tools/Scripts/Templates/SimpleScreenExample/ElementX